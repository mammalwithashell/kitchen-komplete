// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models.Contexts;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace kitchenkomplete.api.Migrations
{
    [DbContext(typeof(KitchenKompleteContext))]
    partial class KitchenKompleteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.FoodItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FoodItem");
                });

            modelBuilder.Entity("Models.Pantry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("Inventory")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Pantries");
                });

            modelBuilder.Entity("Models.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<List<Guid>>("Ingredients")
                        .IsRequired()
                        .HasColumnType("uuid[]");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("Models.FoodItem", b =>
                {
                    b.OwnsOne("Models.NutritionInfo", "NutritionInfo", b1 =>
                        {
                            b1.Property<Guid>("FoodItemId")
                                .HasColumnType("uuid");

                            b1.Property<int>("GramsCarbohydrates")
                                .HasColumnType("integer");

                            b1.Property<int>("GramsFat")
                                .HasColumnType("integer");

                            b1.Property<int>("GramsProtien")
                                .HasColumnType("integer");

                            b1.HasKey("FoodItemId");

                            b1.ToTable("FoodItem");

                            b1.ToJson("NutritionInfo");

                            b1.WithOwner()
                                .HasForeignKey("FoodItemId");
                        });

                    b.Navigation("NutritionInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
